#!/bin/bash

############################################
# Transfer documents to github
# Mount second drive
#Dejavu libexif dhcpcd5 ueberzug
## alacritty lazygit dust python-adblock
############################################

# FIRST INSTALL GIT AND WGET

USER_NAME=""
LVM_PASSWORD=""
GIT_USERNAME=""
GIT_EMAIL=""

echo "deb http://deb.volian.org/volian/ scar main" | sudo tee -a /etc/apt/sources.list.d/volian-archive-scar-unstable.list
wget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg > /dev/null
sudo apt update; sudo apt upgrade
sudo apt install nala stow timeshift make flatpak doas curl xdg-user-dirs wireless-tools iwd wireguard-tools zsh zsh-syntax-highlighting zsh-autosuggestions dash git bc pulseaudio xorg dosfstools hsetroot alsa-utils firewalld apparmor ntfs-3g ripgrep mediainfo bat pass xdotool highlight imagemagick transmission-cli xclip numlockx scrot rsync zathura zathura-pdf-poppler neovim udiskie stow trash-cli dunst youtube-dl physlock picom jq fzf mpv wmctrl light patch syncthing unzip usbutils ffmpegthumbnailer pulsemixer rkhunter clamav qutebrowser libreoffice libreoffice-l10n-pt 

#automated_script
#ip link set wlan0 up
#iwctl station wlan0 scan
#iwctl station wlan0 connect Virus404 -P $WIFIPASS

#echo "Open vault password:"
#echo -n "$LVM_PASSWORD" | cryptsetup open --type luks /dev/sda1 Vault
#mount /dev/mapper/Vault /root/disk

rm .profile
mkdir -p /home/$USER_NAME/{Transferências,Documentos,Música,Imagens/Screenshots,Vídeos,.cache/{lf,transmission}}
mkdir -p /home/$USER_NAME/.local/share/{backgrounds,gvfs-metadata,icc,keyrings,nvim,sounds,Trash,xorg}
touch /home/$USER_NAME/.local/recently-used.xbel
git config --global user.name "$GIT_USERNAME"
git config --global user.email "$GIT_EMAIL"
git clone https://gitea.com/sorathpanzer/dotgit.git /home/$USER_NAME/.config/dotgit
git config --global credential.helper store
mkdir -p /home/$USER_NAME/.cache/zsh
touch /home/$USER_NAME/.cache/zsh/history
sh -c "cd /home/$USER_NAME/.config/dotgit; stow -vt ~ dotfiles"
touch /home/$USER_NAME/.local/recently-used.xbel


#if lsblk | grep -q 'nvme0n1'; then
#  rsync -avrop /root/disk/BackHome/* /home/$USER_NAME
#fi

sudo apt update; sudo apt upgrade
sudo apt install timeshift make flatpak doas curl xdg-user-dirs wireless-tools iwd wireguard-tools zsh zsh-syntax-highlighting zsh-autosuggestions dash git bc pulseaudio xorg dosfstools hsetroot alsa-utils firewalld apparmor ntfs-3g ripgrep mediainfo bat pass xdotool highlight imagemagick transmission-cli xclip numlockx scrot rsync zathura zathura-pdf-poppler neovim udiskie stow trash-cli dunst youtube-dl physlock picom jq fzf mpv wmctrl light patch syncthing unzip usbutils ffmpegthumbnailer pulsemixer rkhunter clamav qutebrowser libreoffice libreoffice-l10n-pt 
echo "deb http://deb.volian.org/volian/ scar main" | sudo tee -a /etc/apt/sources.list.d/volian-archive-scar-unstable.list
wget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg > /dev/null
sudo apt update && sudo apt install nala

echo "permit persist $USER_NAME as root
  permit nopass $USER_NAME cmd apt
  permit nopass $USER_NAME cmd nala
  permit nopass $USER_NAME cmd journalctl
  permit nopass $USER_NAME cmd poweroff
  permit nopass $USER_NAME cmd reboot
  permit nopass $USER_NAME cmd udiskctl
  permit nopass $USER_NAME cmd mount
  permit nopass $USER_NAME cmd light" | sudo tee /etc/doas.conf

sudo mkdir -p /sys/module/snd_hda_intel/parameters/
sudo mkdir -p /etc/polkit-1/rules.d/
echo "vm.swappiness=10" | sudo tee -a /etc/sysctl.d/99-sysctl.conf
echo 1 | sudo tee /sys/module/snd_hda_intel/parameters/power_save
echo "blacklist ideapad_laptop" | sudo tee /etc/modprobe.d/blacklist.conf

  echo '/* Allow members of the wheel group to execute any actions
  * without password authentication, similar to "sudo NOPASSWD:"
  */
  polkit.addRule(function(action, subject) {
  if (subject.isInGroup("wheel")) {
    return polkit.Result.YES;
  }
});' | sudo tee /etc/polkit-1/rules.d/49-nopasswd_global.rules
echo 'polkit.addRule(function(action, subject) {
if ((action.id == "org.freedesktop.udisks2.filesystem-mount-system" ||
  action.id == "org.freedesktop.udisks.filesystem-mount-system-internal") &&
  subject.local && subject.active && subject.isInGroup("wheel"))
  {
    return polkit.Result.YES;
  }
});' | sudo tee /etc/polkit-1/rules.d/allow-mount-internal.rules

sudo mkdir -p /media

echo '# UDISKS_FILESYSTEM_SHARED
# ==1: mount filesystem to a shared directory (/media/VolumeName)
# ==0: mount filesystem to a private directory (/run/media/$USER/VolumeName)
# See udisks(8)
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"' | sudo tee /etc/udev/rules.d/99-udisks2.rules

sudo mkdir /usr/share/xsessions

sudo cat <<EOF > /usr/share/xsessions/dwm.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Dwm
Comment=Dynamic window manager
Exec=/usr/local/bin/dwm
Type=XSession
EOF

sudo ln -sfT dash /usr/bin/sh

sudo mkdir /etc/iwd

echo "[General]
EnableNetworkConfiguration=true
[Settings]
AutoConnect=true" | sudo tee /etc/iwd/main.conf

# Enabling CPU Mitigations
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_cpu_mitigations.cfg | sudo tee /etc/grub.d/40_cpu_mitigations
# Distrusting the CPU
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_distrust_cpu.cfg | sudo tee /etc/grub.d/40_distrust_cpu
# Enabling IOMMU
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_enable_iommu.cfg | sudo tee /etc/grub.d/40_enable_iommu
# Setting GRUB configuration file permissions
sudo chmod 755 /etc/grub.d/*
# Configure AppArmor Parser caching
#sed -i 's/#write-cache/write-cache/g' /etc/apparmor/parser.conf
#sed -i 's,#Include /etc/apparmor.d/,Include /etc/apparmor.d/#g' /etc/apparmor/parser.conf
# Blacklisting kernel modules
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/modprobe.d/30_security-misc.conf | sudo tee -a /etc/modprobe.d/30_security-misc.conf
sudo chmod 600 /etc/modprobe.d/*
# Security kernel settings.
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_security-misc.conf | sudo tee -a /etc/sysctl.d/30_security-misc.conf
sudo sed -i 's/kernel.yama.ptrace_scope=2/kernel.yama.ptrace_scope=3/g' /etc/sysctl.d/30_security-misc.conf
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf | sudo tee -a /etc/sysctl.d/30_silent-kernel-printk.conf
sudo chmod 600 /etc/sysctl.d/*
# IO udev rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/50-sata.rules | sudo tee /etc/udev/rules.d/50-sata.rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/60-ioschedulers.rules | sudo tee /etc/udev/rules.d/60-ioschedulers.rules
sudo chmod 600 /etc/udev/rules.d/*
# Remove nullok from system-auth
sudo sed -i 's/nullok//g' /etc/pam.d/system-auth
# Disable coredump
echo "* hard core 0" | sudo tee /etc/security/limits.conf
# Disable su for non-wheel users
sudo bash -c 'cat > /etc/pam.d/su' <<-'EOF'
#%PAM-1.0
auth		sufficient	pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth		sufficient	pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth		required	pam_wheel.so use_uid
auth		required	pam_unix.so
account		required	pam_unix.so
session		required	pam_unix.so
EOF

echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf

#echo "vboxdrv
#vboxnetadp
#vboxflt" > /etc/modules-load.d/virtualbox.conf

sudo mkdir -p /etc/systemd/system/transmission.service.d
echo "[Service]
User=$USER_NAME" | sudo tee /etc/systemd/system/transmission.service.d/username.conf

sudo mkdir -p /etc/systemd/system/getty@tty1.service.d
sudo touch /etc/systemd/system/getty@tty1.service.d/override.conf
echo "[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin $USER_NAME --noclear %I $TERM" | sudo tee /etc/systemd/system/getty@tty1.service.d/override.conf

 sudo cat <<EOF > /etc/systemd/system/suspend@.service
  [Unit]
  Description=User suspend actions
  After=sleep.target
  [Service]
  User=%i
  Type=forking
  Environment=DISPLAY=:0
  ExecStart=/usr/bin/physlock
  ExecStartPost=/usr/bin/sleep 1
  [Install]
  WantedBy=sleep.target
EOF
 
sudo systemctl enable --now  iwd.service transmission-daemon apparmor suspend@sorath.service firewalld
#aa-enforce /etc/apparmor.d/*

git clone https://github.com/wmutschl/timeshift-autosnap-apt.git /home/$USER/timeshift-autosnap-apt
cd /home/$USER/timeshift-autosnap-apt
sudo make install
#sudo sed -i 's/snapshotEFI=true/snapshotEFI=false/' /etc/timeshift-autosnap-apt.conf

git clone https://github.com/Antynea/grub-btrfs.git /home/$USER/grub-btrfs
$ cd /home/$USER/grub-btrfs
$ sudo make install
$ sudo sed -i 's/#GRUB_BTRFS_SUBMENUNAME="Arch Linux snapshots"/GRUB_BTRFS_SUBMENUNAME="Debian GNU\/Linux snapshots"/' /etc/default/grub-btrfs/config

cd
rm -r /home/$USER/timeshift-autosnap-apt
rm -r /home/$USER/grub-btrfs

sudo truncate -s 0 /swap/swapfile
sudo chattr +C /swap/swapfile
sudo fallocate -l 4G /swap/swapfile
sudo chmod 0600 /swap/swapfile
sudo mkswap /swap/swapfile
sudo swapon /swap/swapfile
echo "/swap/swapfile none swap defaults 0 0" | sudo tee -a /etc/fstab
