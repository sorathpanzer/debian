#!/bin/sh

############################################
# Transfer documents to github
# Mount second drive
#Dejavu libexif dhcpcd5
## alacritty lazygit dust python-adblock
############################################

USER_NAME=""
$LVM_PASSWORD
GIT_USERNAME=""
GIT_EMAIL=""

#automated_script
#ip link set wlan0 up
#iwctl station wlan0 scan
#iwctl station wlan0 connect Virus404 -P $WIFIPASS

#echo "Open vault password:"
#echo -n "$LVM_PASSWORD" | cryptsetup open --type luks /dev/sda1 Vault
#mount /dev/mapper/Vault /root/disk

mkdir -p /home/$USER_NAME/{Transferências,Documentos,Música,Imagens/Screenshots,Vídeos,.cache/{lf,transmission}}
mkdir -p /home/$USER_NAME/.local/share/{backgrounds,gvfs-metadata,icc,keyrings,nvim,sounds,Trash,xorg}
touch /home/$USER_NAME/.local/recently-used.xbel
git config --global user.name "$GIT_USERNAME"
git config --global user.email "$GIT_EMAIL"
git clone https://gitea.com/sorathpanzer/dotgit.git /home/$USER_NAME/.config/dotgit
git config --global credential.helper store
mkdir -p /home/$USER_NAME/.cache/zsh
touch /home/$USER_NAME/.cache/zsh/history
sh -c "cd /home/$USER_NAME/.config/dotgit; stow -vt ~ dotfiles"
rm -R /home/$USER_NAME/.local/share/{applications,backgrounds,gvfs-metadata,icc,keyrings,nvim,sounds,Trash,xorg}
touch /home/$USER_NAME/.local/recently-used.xbel

# Enable AppArmor notifications
bash -c 'cat > /home/${USER}/.config/autostart/apparmor-notify.desktop' <<-'EOF'
[Desktop Entry]
Type=Application
Name=AppArmor Notify
Comment=Receive on screen notifications of AppArmor denials
TryExec=aa-notify
Exec=aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log
StartupNotify=false
NoDisplay=true
EOF

#if lsblk | grep -q 'nvme0n1'; then
#  rsync -avrop /root/disk/BackHome/* /home/$USER_NAME
#fi

######################################################################################
######################################################################################

apt update; apt upgrade
apt install flatpak doas xdg-user-dirs wireless-tools iwd wireguard-tools zsh zsh-syntax-highlighting zsh-autosuggestions dash git bc pulseaudio xorg dosfstools hsetroot alsa-utils snapper firewalld apparmor ntfs-3g ripgrep mediainfo bat pass xdotool highlight imagemagick transmission-cli xclip numlockx scrot rsync zathura zathura-pdf-poppler neovim udiskie stow trash-cli dunst youtube-dl physlock picom jq ueberzug fzf mpv wmctrl light patch syncthing unzip usbutils checkbashisms ffmpegthumbnailer libexif pulsemixer rkhunter clamav qutebrowser libreoffice libreoffice-l10n-pt 

echo "permit persist $USER_NAME as root
  permit nopass $USER_NAME cmd apt
  permit nopass $USER_NAME cmd journalctl
  permit nopass $USER_NAME cmd poweroff
  permit nopass $USER_NAME cmd reboot
  permit nopass $USER_NAME cmd udiskctl
  permit nopass $USER_NAME cmd mount
  permit nopass $USER_NAME cmd light" | tee /etc/doas.conf

echo "vm.swappiness=10" > /etc/sysctl.d/99-sysctl.conf
echo 1 | tee /sys/module/snd_hda_intel/parameters/power_save
echo "blacklist ideapad_laptop" > /etc/modprobe.d/blacklist.conf

  echo '/* Allow members of the wheel group to execute any actions
  * without password authentication, similar to "sudo NOPASSWD:"
  */
  polkit.addRule(function(action, subject) {
  if (subject.isInGroup("wheel")) {
    return polkit.Result.YES;
  }
});' > /etc/polkit-1/rules.d/49-nopasswd_global.rules
echo 'polkit.addRule(function(action, subject) {
if ((action.id == "org.freedesktop.udisks2.filesystem-mount-system" ||
  action.id == "org.freedesktop.udisks.filesystem-mount-system-internal") &&
  subject.local && subject.active && subject.isInGroup("wheel"))
  {
    return polkit.Result.YES;
  }
});' > /etc/polkit-1/rules.d/allow-mount-internal.rules

mkdir -p /media

echo '# UDISKS_FILESYSTEM_SHARED
# ==1: mount filesystem to a shared directory (/media/VolumeName)
# ==0: mount filesystem to a private directory (/run/media/$USER/VolumeName)
# See udisks(8)
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"' > /etc/udev/rules.d/99-udisks2.rules

mkdir /usr/share/xsessions

cat <<EOF > /usr/share/xsessions/dwm.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Dwm
Comment=Dynamic window manager
Exec=/usr/local/bin/dwm
Type=XSession
EOF

ln -sfT dash /usr/bin/sh

mkdir /etc/iwd

echo "[General]
EnableNetworkConfiguration=true
[Settings]
AutoConnect=true" > /etc/iwd/main.conf

# Enabling CPU Mitigations
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_cpu_mitigations.cfg >> /etc/grub.d/40_cpu_mitigations
# Distrusting the CPU
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_distrust_cpu.cfg >> /etc/grub.d/40_distrust_cpu
# Enabling IOMMU
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/default/grub.d/40_enable_iommu.cfg >> /etc/grub.d/40_enable_iommu
# Setting GRUB configuration file permissions
chmod 755 /etc/grub.d/*
# Configure AppArmor Parser caching
sed -i 's/#write-cache/write-cache/g' /etc/apparmor/parser.conf
sed -i 's,#Include /etc/apparmor.d/,Include /etc/apparmor.d/#g' /etc/apparmor/parser.conf
# Blacklisting kernel modules
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/modprobe.d/30_security-misc.conf >> /etc/modprobe.d/30_security-misc.conf
chmod 600 /etc/modprobe.d/*
# Security kernel settings.
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_security-misc.conf >> /etc/sysctl.d/30_security-misc.conf
sed -i 's/kernel.yama.ptrace_scope=2/kernel.yama.ptrace_scope=3/g' /etc/sysctl.d/30_security-misc.conf
curl https://raw.githubusercontent.com/Whonix/security-misc/master/etc/sysctl.d/30_silent-kernel-printk.conf >> /etc/sysctl.d/30_silent-kernel-printk.conf
chmod 600 /etc/sysctl.d/*
# IO udev rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/50-sata.rules > /etc/udev/rules.d/50-sata.rules
curl https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-common-settings/-/raw/master/etc/udev/rules.d/60-ioschedulers.rules > /etc/udev/rules.d/60-ioschedulers.rules
chmod 600 /etc/udev/rules.d/*
# Remove nullok from system-auth
sed -i 's/nullok//g' /etc/pam.d/system-auth
# Disable coredump
echo "* hard core 0" >> /etc/security/limits.conf
# Disable su for non-wheel users
bash -c 'cat > /etc/pam.d/su' <<-'EOF'
#%PAM-1.0
auth		sufficient	pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth		sufficient	pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth		required	pam_wheel.so use_uid
auth		required	pam_unix.so
account		required	pam_unix.so
session		required	pam_unix.so
EOF

echo "nameserver 1.1.1.1" > /etc/resolv.conf

#echo "vboxdrv
#vboxnetadp
#vboxflt" > /etc/modules-load.d/virtualbox.conf

mkdir -p /etc/systemd/system/transmission.service.d
echo "[Service]
User=$USER_NAME" > /etc/systemd/system/transmission.service.d/username.conf

mkdir -p /etc/systemd/system/getty@tty1.service.d
touch /etc/systemd/system/getty@tty1.service.d/override.conf
echo "[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin $USER_NAME --noclear %I $TERM" > /etc/systemd/system/getty@tty1.service.d/override.conf

 cat <<EOF > /etc/systemd/system/suspend@.service
  [Unit]
  Description=User suspend actions
  After=sleep.target
  [Service]
  User=%i
  Type=forking
  Environment=DISPLAY=:0
  ExecStart=/usr/bin/physlock
  ExecStartPost=/usr/bin/sleep 1
  [Install]
  WantedBy=sleep.target
EOF
 
systemctl enable --now  iwd.service transmission-daemon apparmor suspend@sorath.service firewalld
aa-enforce /etc/apparmor.d/*
