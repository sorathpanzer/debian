#!/usr/bin/env bash

# Version= 0.2.63

# TODO: Before running this script you must install:
# Fedora -> audit
# NIXOS -> git, stow
# FreeBSD -> doas, curl bash >>>>>>>> "permit nopass keepenv" to doas.conf
# $PULSEAUDIOUTILS not installed by default problem with missing 64bit support

exec &> >(tee -a "install.log") 2>install.error

USERNAME=""
LVM_PASSWORD=""
GIT_USERNAME="${USERNAME}panzer"
GIT_EMAIL="$GIT_USERNAME"
DOTFILES="https://gitea.com/sorathpanzer/dotgit.git"

RELEASE=$(cat /etc/os-release | grep ^NAME= | cut -d '=' -f2 | awk '{print $1}' | tr -d '"')

CONFIGURE_PACKAGES()
{

  NA=" "
# DISTRO=(        Debian/Ubuntu               Fedora                      Rhel                        Arch                        Void                        Alpine                      OpenSuse                    FreeBSD             )
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
  ADBLOCK=(       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       py39-adblock        )
  ANDROIDTOOLS=(  android-tools-adb           android-tools               "$NA"                       android-tools               android-tools               android-tools               android-tools               android-tools       )
  BTRFSPROGS=(    btrfs-progs                 btrfs-progs                 "$NA"                       btrfs-progs                 btrfs-progs                 btrfs-progs                 btrfsprogs                  "$NA"               )
  CRONTABS=(      python3-crontab             crontabs                    crontabs                    "$NA"                       "$NA"                       "$NA"                       crontabs                    py39-python-crontab )
  DBUSX11=(       dbus-x11                    dbus-x11                    dbus-x11                    dbus                        dbus-x11                    dbus-x11                    dbus-x11                    dbus                )
  DUNST=(         dunst                       dunst                       "$NA"                       dunst                       dunst                       dunst                       dunst                       dunst               )
  FEH=(           feh                         feh                         "$NA"                       feh                         feh                         feh                         feh                         feh                 )
  FFTHUMBNAILER=( ffmpegthumbnailer           ffmpegthumbnailer           "$NA"                       ffmpegthumbnailer           ffmpegthumbnailer           ffmpegthumbnailer           FFmpegThumbnailer           ffmpegthumbnailer   )
  FIREFOX=(       firefox                     firefox                     firefox                     firefox                     firefox                     firefox                     firefox                     firefox-esr         )
  FLATPAK=(       "$NA"                       flatpak                     "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"               )
  FZF=(           fzf                         fzf                         "$NA"                       fzf                         fzf                         fzf                         fzf                         fzf                 )
  GIFLIB=(        giflib-devel                giflib-devel                giflib-devel                giflib-devel                giflib-devel                giflib-devel                giflib-devel                giflib              )
  GRUBBY=(        grubby                      grubby                      grubby                      grubby                      grubby                      grubby                      grubby                      "$NA"               )
  IMAGEMAGICK=(   imagemagick                 ImageMagick                 ImageMagick                 imagemagick                 ImageMagick                 imagemagick                 ImageMagick                 ImageMagick7-nox11  )
  IMLIB2=(        imlib2-devel                imlib2-devel                imlib2-devel                imlib2-devel                imlib2-devel                imlib2-devel                "$NA"                       imlib2              )
  LF=(            lf                          "$NA"                       "$NA"                       lf                          lf                          lf                          lf                          lf                  )
  LIBEXIF=(       libexif-devel               libexif-devel               libexif-devel               libexif-devel               libexif-devel               libexif-devel               libexif-devel               libexif             )
  LIBREOFFICE=(   libreoffice-calc            libreoffice-calc            libreoffice-calc            libreoffice-calc            libreoffice-calc            libreoffice-calc            libreoffice-calc            libreoffice         )
  LIBREOFFPT=(    libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  libreoffice-langpack-pt-PT  pt-libreoffice      )
  LIBX11=(        libX11-devel                libX11-devel                libX11-devel                libX11-devel                libX11-devel                libX11-devel                libX11-devel                libX11              )
  LIBXFT=(        libxft2                     libXft-devel                libXft-devel                libxft                      libXft                      libxft                      libXft                      libXft              )
  LIBXINERAMA=(   libXinerama-devel           libXinerama-devel           libXinerama-devel           libXinerama-devel           libXinerama-devel           libXinerama-devel           libXinerama-devel           libXinerama         )
  LIGHT=(         light                       light                       "$NA"                       light                       light                       light                       light                       "$NA"               )
  LMSENSORS=(     lm-sensors                  lm_sensors                  lm_sensors                  lm_sensors                  lm_sensors                  lm-sensors                  lm_sensors                  "$NA"               )
  NTFS3G=(        ntfs-3g                     ntfs-3g                     ntfs-3g                     ntfs-3g                     ntfs-3g                     ntfs-3g                     ntfs-3g                     fusefs-ntfs         )
  PANDOCPDF=(     pandoc-pdf                  pandoc-pdf                  "$NA"                       pandoc                      pandoc                      pandoc                      pandoc                      "$NA"               )
  PICOM=(         picom                       picom                       "$NA"                       picom                       picom                       picom                       picom                       picom               )
  POPPLERUTILS=(  poppler-utils               poppler-utils               poppler                     poppler-utils               poppler-utils               poppler-utils               poppler-utils               poppler-utils       )
  PAUTILS=(       pulseaudio-utils            pulseaudio-utils            pulseaudio-utils            pulseaudio                  pulseaudio-utils            pulseaudio-utils            pulseaudio-utils            "$NA"               )
  PYTHON=(        "$NA"                       python3-devel               python3-devel               "$NA"                       "$NA"                       "$NA"                       "$NA"                       python311           )
  PYTHON3PIP=(    python3-pip                 python3-pip                 python-pip                  python-pip                  py3-pip                     python3-pip                 python3-pip                 py39-pip            )
  PYTHON3SIX=(    python3-six                 python3-six                 python-six                  python-six                  py3-six                     python3-six                 python3-six                 py39-six            )
  QEMU=(          qemu                        qemu                        qemu-img                    qemu-base                   qemu                        qemu                        qemu                        qemu                )
  SCROT=(         scrot                       scrot                       "$NA"                       scrot                       scrot                       scrot                       scrot                       scrot               )
  SOX=(           sox                         sox                         "$NA"                       sox                         sox                         sox                         sox                         sox                 )
  STOW=(          stow                        stow                        "$NA"                       stow                        stow                        stow                        stow                        stow                )
  TELEGRAM=(      telegram-desktop            telegram-desktop            "$NA"                       telegram-desktop            telegram-desktop            telegram-desktop            telegram-desktop            telegram-desktop    )
  TIG=(           tig                         tig                         tig                         tig                         tig                         tig                         "$NA"                       tig                 )
  TRASHCLI=(      trash-cli                   trash-cli                   "$NA"                       trash-cli                   trash-cli                   trash-cli                   trash-cli                   "$NA"               )
  UEBERZUG=(      "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       "$NA"                       py39-ueberzug       )
  UDISKIE=(       udiskie                     udiskie                     "$NA"                       udiskie                     udiskie                     udiskie                     udiskie                     "$NA"               )
  XDOTOOL=(       xdotool                     xdotool                     "$NA"                       xdotool                     xdotool                     xdotool                     xdotool                     xdotool             )
  XF86INTEL=(     xserver-xorg-video-intel    xorg-x11-drv-intel          "$NA"                       xf86-video-intel            xf86-video-intel            xf86-video-intel            xf86-video-intel            xf86-video-intel    )
  XINIT=(         xinit                       xorg-x11-xinit              xorg-x11-xinit              xinit                       xinit                       xinit                       xinit                       xinit               )
  XINPUT=(        xinput                      xinput                      xinput                      xorg-xinput                 xinput                      xinput                      xinput                      xinput              )
  XORGSERVER=(    xserver-xorg                xorg-x11-server-Xorg        xorg-x11-server-Xorg        xorg-server                 xorg-minimal                xorg-server                 xorg-server                 xorg-minimal        )
  XRANDR=(        x11-xserver-utils           xrandr                      xrandr                      xorg-xrandr                 xrandr                      xrandr                      xrandr                      xrandr              )
  XRDB=(          x11-xserver-utils           xrdb                        xrdb                        xorg-xrdb                   xrdb                        xrdb                        xrdb                        xrdb                )
  XSET=(          x11-xserver-utils           xset                        xset                        xorg-xset                   xset                        xset                        xset                        xset                )
  YOUTUBEDL=(     youtube-dl                  youtube-dl                  youtube-dl                  youtube-dl                  youtube-dl                  youtube-dl                  youtube-dl                  youtube_dl          )
  ZATHURA=(       zathura                     zathura                     "$NA"                       zathura                     zathura                     zathura                     zathura                     zathura             )
  ZATHURAPDF=(    zathura-pdf-poppler         zathura-pdf-poppler         "$NA"                       zathura-pdf-poppler         zathura-pdf-poppler         zathura-pdf-poppler         Zathura-PDF-Poppler         zathura-pdf-poppler )

  case "${RELEASE}" in
    "")                 echo "No option was specified."; exit 1 ;;
    debian|ubuntu)	    POS="0" ;;
    Fedora)             POS="1" ;;
    AlmaLinux)          POS="2" ;;
    Arch)               POS="3" ;;
    Void)               POS="4" ;;
    Alpine)             POS="5" ;;
    OpenSuse)           POS="6" ;;
    FreeBSD)            POS="7" ;;
  esac
}

FEDORA_SETUP()
{
      echo "Defaults:$USERNAME timestamp_timeout=60" | sudo tee /etc/sudoers.d/sorath
    [ -x "$(command -v rpm-ostree)" ] && sudo rpm-ostree override remove zezere-ignition ignition dbus-parsec
    $PKGINSTALL install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    [ -x "$(command -v rpm-ostree)" ] && sudo rpm-ostree ex apply-live --allow-replacement
    [ -x "$(command -v rpm-ostree)" ] && sudo sed -i 's/none/stage/g' /etc/rpm-ostreed.conf
    sudo sed -i '2s/\/bin\/bash/\/usr\/bin\/zsh/g' /etc/passwd
    [ -x "$(command -v rpm-ostree)" ] && sudo systemctl enable rpm-ostreed-automatic.timer

    echo '[updates-archive]
name=Fedora $releasever - $basearch - Updates Archive
baseurl=https://fedoraproject-updates-archive.fedoraproject.org/fedora/$releasever/$basearch/
enabled=AUTO_VALUE
metadata_expire=6h
repo_gpgcheck=0
type=rpm
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch
skip_if_unavailable=True
cost=10000 # default is 1000' | sudo tee /etc/yum.repos.d/fedora-updates-archive.repo
}

RHEL_SETUP()
{
    sudo dnf update -y
    sudo dnf install -y epel-release
    sudo dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm
    sudo dnf config-manager --set-enabled crb
    sudo dnf install -y tar

    sh <(curl -L https://nixos.org/nix/install) --no-daemon
    sed -i 's/nixpkgs-unstable/nixos-22.05/g' .nix-channels
    . $HOME/.nix-profile/etc/profile.d/nix.sh

    nix-env -iA nixpkgs.stow nixpkgs.android-tools nixpkgs.ffmpegthumbnailer nixpkgs.fzf nixpkgs.scrot nixpkgs.xdotool nixpkgs.btrfs-progs nixpkgs.dunst nixpkgs.feh \
      nixpkgs.trash-cli nixpkgs.zathura nixpkgs.pandoc  nixpkgs.qutebrowser nixpkgs.transmission-gtk  nixpkgs.signal-desktop  nixpkgs.tdesktop nixpkgs.light \
      nixpkgs.picom nixpkgs.sox nixpkgs.udiskie nixpkgs.python310Packages.adblock nixpkgs.ueberzug

    echo "max_parallel_downloads=10
    deltarpm=True
    defaultyes=True" | sudo tee -a /etc/dnf/dnf.conf
}

FREEBSD_SETUP()
{
      doas pkg install -y ncurses dsbmd fusefs-lkl portmaster nsxiv
  doas sysrc dbus_enable=YES
  doas sysrc openntpd_enable=YES
  doas sysrc hald_enable=YES
  doas sysrc moused_enable=YES
  doas sysrc linux_enable=YES
  echo "kern.evdev.rcpt_mask=3" | doas tee -a /etc/sysctl.conf
  cp .config/suckless/dwm-6.3/config.bsd .config/suckless/dwm-6.3/config.mk
  cp .config/suckless/dmenu-5.1/config.bsd .config/suckless/dmenu-5.1/config.mk
  cp .config/suckless/st-0.8.5/config.bsd .config/suckless/st-0.8.5/config.mk
  cd $HOME/.config/suckless/dwm-6.3; doas make clean install
  cd $HOME/.config/suckless/dmenu-5.1; doas make clean install
  cd $HOME/.config/suckless/st-0.8.5; doas make clean install
  cd $HOME/.config/suckless/dwmblocks; cp Makefile.bsd Makefile; doas make clean install
  #cd $HOME/.config/suckless/sxiv; doas make clean install
  cd $HOME
}

NIXOS_SETUP()
{
      mkdir .config
  curl -L https://raw.githubusercontent.com/sorathpanzer/nixos/main/configuration.nix > configuration.nix
  sed -i s/luks-/$(lsblk -l | grep luks | awk '{print $1}')/g configuration.nix
  cp .config/suckless/dwm-6.3/config.nixos .config/suckless/dwm-6.3/config.mk
  cp .config/suckless/dmenu-5.1/config.nixos .config/suckless/dmenu-5.1/config.mk
  cp .config/suckless/st-0.8.5/config.nixos .config/suckless/st-0.8.5/config.mk
  sudo mv configuration.nix /etc/nixos
  sudo nixos-rebuild boot
}

INSTALL_PACKAGES()
{
  $PKGINSTALL ffmpeg gcc git groff i3lock keepassxc ncdu neovim mpv pipewire rsync syncthing unzip usbutils w3m wireguard-tools xclip xdg-user-dirs zsh \
    ${ADBLOCK[$POS]} ${ANDROIDTOOLS[$POS]} ${BTRFSPROGS[$POS]} ${CRONTABS[$POS]} ${DBUSX11[$POS]} ${DUNST[$POS]} ${FEH[$POS]} ${FFTHUMBNAILER[$POS]} ${FIREFOX[$POS]} \
    ${FLATPAK[$POS]} ${FZF[$POS]} ${GIFLIB[$POS]} ${GRUBBY[$POS]} ${IMAGEMAGICK[$POS]} ${LIBXFT[$POS]} ${IMLIB2[$POS]} ${LIBREOFFICE[$POS]} ${LIBREOFFPT[$POS]} ${LF[$POS]} \
    ${LIGHT[$POS]} ${LIBEXIF[$POS]} ${LIBX11[$POS]} ${LIBXINERAMA[$POS]} ${LMSENSORS[$POS]} ${NTFS3G[$POS]} ${PANDOCPDF[$POS]} ${PICOM[$POS]} ${POPPLERUTILS[$POS]} \
    ${PAUTILS[$POS]} ${PYTHON[$POS]} ${PYTHON3PIP[$POS]} ${PYTHON3SIX[$POS]} ${QEMU[$POS]} ${SCROT[$POS]} ${SOX[$POS]} ${STOW[$POS]} ${TIG[$POS]} ${TRASHCLI[$POS]} \
    ${TELEGRAM[$POS]} ${UDISKIE[$POS]} ${UEBERZUG[$POS]} ${XDOTOOL[$POS]} ${XINPUT[$POS]} ${XF86INTEL[$POS]} ${XORGSERVER[$POS]} ${XINIT[$POS]} ${XRANDR[$POS]} \
    ${XRDB[$POS]} ${XSET[$POS]} ${YOUTUBEDL[$POS]} ${ZATHURA[$POS]} ${ZATHURAPDF[$POS]}

  [ -x "$(command -v rpm-ostree)" ] && sudo rpm-ostree ex apply-live --allow-replacement

  if [ $RELEASE = Fedora ] || [ $RELEASE = "AlmaLinux" ]; then
    sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    sudo flatpak install org.signal.Signal -y
    [ $RELEASE = "AlmaLinux" ] && sudo flatpak install org.qutebrowser.qutebrowser -y
  fi
}

  CONFIGURE_HOME()
  {
  [ -e .profile ] && rm .profile
  mkdir -p /home/$USERNAME/{Transferências,Documentos,Música,Imagens/Screenshots,Vídeos,.config,.cache/{lf,transmission}}
  mkdir -p /home/$USERNAME/.local/share/{backgrounds,gvfs-metadata,icc,keyrings,nvim,sounds,Trash,xorg}
  touch /home/$USERNAME/.local/recently-used.xbel
  git config --global user.name "$GIT_USERNAME"
  git config --global user.email "$GIT_EMAIL"
  echo "Cloning my dotfiles..."
  git clone $DOTFILES /home/$USERNAME/.config/dotgit
  git config --global credential.helper store
  mkdir -p /home/$USERNAME/.cache/zsh
  touch /home/$USERNAME/.cache/zsh/history
  sh -c "cd /home/$USERNAME/.config/dotgit; stow -vt ~ dotfiles"

  pip install --user adblock
  pip install --user ueberzug

  cp .config/suckless/dwm-6.3/config.tux .config/suckless/dwm-6.3/config.mk
  cp .config/suckless/dmenu-5.1/config.tux .config/suckless/dmenu-5.1/config.mk
  cp .config/suckless/st-0.8.5/config.tux .config/suckless/st-0.8.5/config.mk

  if [ $RELEASE != FreeBSD ]; then
    NVME=$(lsblk -l | grep sda | head -n 1 | awk '{print $1}')
    SDA=$(lsblk -l | grep sda | head -n 1 | awk '{print $1}')

    if [ ! -z $LVM_PASSWORD ]; then
      echo "Open vault password:"
      mkdir Vault
      echo -n "$LVM_PASSWORD" | sudo cryptsetup open --type luks /dev/sda1 Vault
      sudo mount /dev/mapper/Vault Vault
      rsync -avrop Vault/Documentos/BackHome/ /home/$USERNAME
      sudo cp $HOME/Documentos/wg0.conf /etc/wireguard
    fi
  fi
  }

  CONFIGURE_SYSTEM()
  {
    sudo mkdir -p /etc/polkit-1/rules.d/

    echo "vm.swappiness=10" | sudo tee -a /etc/sysctl.d/99-sysctl.conf
    echo "blacklist ideapad_laptop" | sudo tee /etc/modprobe.d/blacklist.conf

    echo '/* Allow members of the wheel group to execute any actions
    * without password authentication, similar to "sudo NOPASSWD:"
    */
    polkit.addRule(function(action, subject) {
    if (subject.isInGroup("wheel")) {
      return polkit.Result.YES;
    }
  });' | sudo tee /etc/polkit-1/rules.d/49-nopasswd_global.rules

  echo 'polkit.addRule(function(action, subject) {
  if ((action.id == "org.freedesktop.udisks2.filesystem-mount-system" ||
    action.id == "org.freedesktop.udisks.filesystem-mount-system-internal") &&
    subject.local && subject.active && subject.isInGroup("wheel"))
    {
      return polkit.Result.YES;
    }
  });' | sudo tee /etc/polkit-1/rules.d/allow-mount-internal.rules

  sudo mkdir -p /media
  echo '# UDISKS_FILESYSTEM_SHARED
  # ==1: mount filesystem to a shared directory (/media/VolumeName)
  # ==0: mount filesystem to a private directory (/run/media/$USER/VolumeName)
  # See udisks(8)
  ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"' | sudo tee /etc/udev/rules.d/99-udisks2.rules

  echo "[Unit]
  Description=Lock X session using slock for user %i
  Before=sleep.target
  [Service]
  User=%i
  Type=forking
  Environment=DISPLAY=:0
  ExecStartPre=/usr/bin/xset dpms force suspend
  ExecStart=/usr/bin/i3lock -c 000000
  [Install]
  WantedBy=sleep.target" | sudo tee /etc/systemd/system/suspend@.service

  echo 'Section "InputClass"
  Identifier "libinput touchpad catchall"
  MatchIsTouchpad "on"
  MatchDevicePath "/dev/input/event*"
  Driver "libinput"
  Option "NaturalScrolling" "true"
  EndSection' | sudo tee /etc/X11/xorg.conf.d/40-libinput.conf

  #echo 'Section "Device"
  #Identifier "Intel Graphics"
  #Driver "intel"
  #Option "TearFree" "true"
  #Option "DRI" "False"
  #EndSection' | sudo tee /etc/X11/xorg.conf.d/20-intel.conf

  echo 'ATTR{idVendor}=="2717", ATTR{idProduct}=="4ee7", SYMLINK+="libmtp-%k", ENV{ID_MTP_DEVICE}="1", ENV{ID_MEDIA_PLAYER}="1"
  SUBSYSTEMS=="usb", ATTRS{idVendor}=="2717", MODE="0640", OWNER="sorath"' | sudo tee /etc/udev/rules.d/50-android.rules

  if [ $RELEASE != "Fedora" ] && [ $RELEASE != "AlmaLinux" ]; then
    sudo usermod -a -G plugdev $USER
  fi

  sudo usermod -s /usr/bin/zsh $USER

  sudo mkdir -p /etc/systemd/system/getty@tty1.service.d/

  sudo touch /etc/systemd/system/getty@tty1.service.d/override.conf
  echo '[Service]
  ExecStart=
  ExecStart=-/usr/sbin/agetty --autologin sorath --noclear %I $TERM' | sudo tee /etc/systemd/system/getty@tty1.service.d/override.conf

  sudo touch /etc/sudoers.d/$USERNAME
  echo "$USERNAME ALL=(ALL) NOPASSWD: /usr/bin/wg-quick,/usr/bin/wg,/usr/bin/ostree,/usr/sbin/reboot,/usr/sbin/poweroff,/usr/bin/setleds" | sudo tee /etc/sudoers.d/sorath

  echo "$USERNAME" | sudo tee -a /etc/shutdown.allow

  sudo systemctl enable suspend@$USERNAME.service
  sudo grubby --update-kernel=ALL --args=quiet
  }

CONFIGURE_PACKAGES

case "${RELEASE}" in
  "")                 echo "No option was specified."; exit 1 ;;
  debian|ubuntu)
    PKGINSTALL="sudo apt install"
    APT_SETUP ;;
  Fedora)
    PKGINSTALL="[ -x "$(command -v rpm-ostree)" ] && sudo rpm-ostree install || sudo dnf install -y"
    FEDORA_SETUP ;;
  AlmaLinux)
    PKGINSTALL="sudo dnf install -y"
    RHEL_SETUP ;;
  Arch)
    PKGINSTALL="sudo pacman -Syu"
    ARCH_SETUP ;;
  Void)
    PKGINSTALL="sudo xbps-install"
    VOID_SETUP ;;
  Alpine)
    PKGINSTALL="sudo apk install -y"
    ALPINE_SETUP ;;
  OpenSuse)
    PKGINSTALL="sudo zypper install -y"
    SUSE_SETUP ;;
  FreeBSD)
    PKGINSTALL="doas pkg install -y"
    CONFIGURE_HOME
    FREEBSD_SETUP ;;
  NixOS)
    CONFIGURE_HOME
    NIXOS_SETUP ;;
esac

case "${RELEASE}" in
  "")                 echo "No option was specified."; exit 1 ;;
  debian|ubuntu|Fedora|AlmaLinux|Arch|Void|Alpine|OpenSuse) CONFIGURE_HOME ;;
esac

  if [ $RELEASE != NixOS ] &&  [ $RELEASE != FreeBSD ]; then
    CONFIGURE_SYSTEM
  fi

  cat install.error | grep error
